/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module control_unit_56 (
    input [15:0] custom_signal_a,
    input [15:0] custom_signal_b,
    input [31:0] pn_gen_num,
    input [15:0] crrt_btn_list,
    input [15:0] prev_btn_list,
    input [15:0] radata_in,
    input [3:0] reg_addresses_in_a,
    input [3:0] reg_addresses_in_b,
    input [1:0] ra_select_signal,
    input [1:0] rb_select_signal,
    input [1:0] asel_input_select_signal,
    input [1:0] bsel_input_select_signal,
    input wdsel_input_select_signal,
    input [1:0] wa_select_signal,
    input [3:0] custom_address,
    output reg [15:0] relay_crrt_btn_list,
    output reg [3:0] rb_out,
    output reg [3:0] ra_out,
    output reg [3:0] wa_out,
    output reg [15:0] asel_b_out,
    output reg [15:0] bsel_b_out,
    output reg [15:0] wdsel_b_out,
    output reg bomb_signal
  );
  
  
  
  always @* begin
    
    case (wa_select_signal)
      2'h0: begin
        wa_out = pn_gen_num[0+3-:4];
      end
      2'h1: begin
        wa_out = reg_addresses_in_a;
      end
      2'h2: begin
        wa_out = reg_addresses_in_b;
      end
      2'h3: begin
        wa_out = custom_address;
      end
      default: begin
        wa_out = 4'h0;
      end
    endcase
    relay_crrt_btn_list = crrt_btn_list;
    if (radata_in[2+0-:1] == 1'h1) begin
      bomb_signal = 1'h1;
    end else begin
      bomb_signal = 1'h0;
    end
    
    case (ra_select_signal)
      1'h0: begin
        ra_out = reg_addresses_in_a;
      end
      1'h1: begin
        ra_out = pn_gen_num[0+3-:4];
      end
      default: begin
        ra_out = 4'h0;
      end
    endcase
    
    case (rb_select_signal)
      1'h0: begin
        rb_out = reg_addresses_in_b;
      end
      1'h1: begin
        rb_out = pn_gen_num[0+3-:4];
      end
      default: begin
        rb_out = 4'h0;
      end
    endcase
    
    case (wdsel_input_select_signal)
      1'h0: begin
        wdsel_b_out = 16'h0004;
      end
      1'h1: begin
        wdsel_b_out = 1'h0;
      end
      default: begin
        wdsel_b_out = 1'h0;
      end
    endcase
    
    case (asel_input_select_signal)
      2'h0: begin
        asel_b_out = crrt_btn_list;
      end
      2'h2: begin
        asel_b_out = 16'h0001;
      end
      2'h3: begin
        asel_b_out = custom_signal_a;
      end
      default: begin
        asel_b_out = crrt_btn_list;
      end
    endcase
    
    case (bsel_input_select_signal)
      2'h0: begin
        bsel_b_out = prev_btn_list;
      end
      2'h2: begin
        bsel_b_out = 16'h0001;
      end
      2'h3: begin
        bsel_b_out = custom_signal_b;
      end
      default: begin
        bsel_b_out = prev_btn_list;
      end
    endcase
  end
endmodule
